[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Getting Started Resources:\nMarkdown – useful for markdowns\nExecutionoptions"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#introducing-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#introducing-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "1.3 Introducing ggplot",
    "text": "1.3 Introducing ggplot\nFor more details, visit ggplot2.\nSmall cheatsheet\n\n\n\nggplot2\n\n\n\n1.3.1 R Graphics VS ggplot\nPlotting a simple bar chart\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS, ylab='Number of students', xlab='score', main='Distribution of Math scores')\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=MATHS)) + \n  geom_histogram(bins=10,\n                 boundary = 100,\n                 color='black',\n                 fill='grey',size = 0.3) +\n  ggtitle('Distribution of Math Scores')\n\n\n\n\n\n\n\ntabsets — follow this guide to create a panel tabset\nWhy use ggplot2 instead of built-in plot function?\nHadley Wickham\n\n\n\n\n\n\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "1.4 Grammar of Graphics",
    "text": "1.4 Grammar of Graphics\nBefore we getting started using ggplot2, it is important for us to understand the principles of Grammer of Graphics.\nGrammar of Graphics is a general scheme for data visualization which breaks up graphs into semantic components such as scales and layers. It was introduced by Leland Wilkinson (1999) Grammar of Graphics, Springer. The grammar of graphics is an answer to a question:\nWhat is a statistical graphic?\nIn the nutshell, Grammar of Graphics defines the rules of structuring mathematical and aesthetic elements into a meaningful graph.\nThere are two principles in Grammar of Graphics, they are:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\nA good grammar of graphics will allow us to gain insight into the composition of complicated graphics, and reveal unexpected connections between seemingly different graphics (Cox 1978). It also provides a strong foundation for understanding a diverse range of graphics. Furthermore, it may also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.\n\n1.4.1 A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. “A layered grammar of graphics.”\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics: Take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line. Facets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: Statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "title": "Hands-on Exercise 1",
    "section": "1.5 Essential Grammatical Elements in ggplot2: data",
    "text": "1.5 Essential Grammatical Elements in ggplot2: data\nLet us call the ggplot() function using the code chunk on the right.\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\nA blank canvas appears.\nggplot() initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not already a data.frame, it will be converted to one by fortify()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetic-mappings",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetic-mappings",
    "title": "Hands-on Exercise 1",
    "section": "1.6 Essential Grammatical Elements in ggplot2: Aesthetic mappings",
    "text": "1.6 Essential Grammatical Elements in ggplot2: Aesthetic mappings\nThe aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can thus encode an aspect of the data and be used to convey information.\nAll aesthetics of a plot are specified in the aes() function call (in later part of this lesson, you will see that each geom layer can have its own aes specification)\nCode chunk below adds the aesthetic element into the plot.\n\nggplot(data=exam_data,\n       aes(x=MATHS))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nggplot includes the x-axis and the axis’s label\n\n\n\n1.7 Essential Grammatical Elements in ggplot2: geom\nGeometric objects are the actual marks we put on a plot.\nExamples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\nA plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the + operator.\nFor complete list, please refer to here.\n\n\n1.7.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n1.7.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(dotsize=0.5)\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(binwidth=2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL,\n                     breaks= NULL)\n\n\n\n\n\n\n1.7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(binwidth=10,color='white')\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\n\n1.7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n1.7.5 Modifying a geometric object by changing aes()\n\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           fill = GENDER)) +\n         geom_histogram(bins =20,\n                        color='grey40')\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric.\n\n\n\n\n1.7.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_density(color='orange')\n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\nI have to first remove the ‘color’ within geom_density.\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           color=GENDER)) +\n  geom_density()\n\n\n\n\n\n\n1.7.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y=MATHS,\n           x=GENDER)) +\n  geom_boxplot()\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n1.7.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n1.7.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\nNYX: groupby gender\nSet color by group\nColor-hex\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= ENGLISH,\n           color = GENDER)) +\n  geom_point() +\n  scale_color_manual(values = c(\"#ca7dcc\",  #manually st the color\n                                \"#1b98e0\",\n                                \"#353436\",  #not applicable\n                                \"#02e302\"))  #not applicable\n\n\n\n\n\n\n1.7.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\n\nCode\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n\n  geom_point(position = 'jitter',\n             size=0.5) +\n  geom_boxplot()\n\n\n\n\n\nAbove: NYX’s mistake in the layer order\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +\n  geom_point(position = 'jitter',\n             size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on Exercise 1",
    "section": "1.8 Essential Grammatical Elements in ggplot2: stat",
    "text": "1.8 Essential Grammatical Elements in ggplot2: stat\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nfrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n1.8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data,\n       aes( y= MATHS, x = GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n1.8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\nNYX: Add the mean to the boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = 'red',\n               size=4)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ncolour is spelled in UK ENG\n\n\n\n\n1.8.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n\n\n\n\n\n\n1.8.4 Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default method used is loess.\n\n\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5, method = lm)\n\n\n\n\nNYX: To add Add equation and R^2 to the plot, we can use the library ggpmisc.\n\nlibrary(ggpmisc)\n\n\n\n\n\n\n\nNote\n\n\n\nAbout the error: annotate is masked from ggplot2. To use annotate from ggplot2, we can call it out explicitly.\nEg.: # Call out the ggplot2 annotate() function explicitly p + ggplot2::annotate(“text”, x = 4, y = 20, label = “More text”)\nOther references:\nhttps://stackoverflow.com/questions/39137110/what-does-the-following-object-is-masked-from-packagexxx-mean\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  stat_poly_line() +\n  stat_poly_eq(use_label(c(\"eq\", \"R2\"))) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "title": "Hands-on Exercise 1",
    "section": "1.9 Essential Grammatical Elements in ggplot2: Facets",
    "text": "1.9 Essential Grammatical Elements in ggplot2: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_wrap and facet_grid().\n\n1.9.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins=20) +\n  facet_wrap(~CLASS) +\n  labs(y='Number of students', x='Math scores')\n\n\n\n\nData manipulation, supposed we only want to visualise classes 3A, 3B, 3C, 3D. We could subset the exam data to include only these students.\n\nsub_data <- exam_data[exam_data$CLASS %in% c('3A','3B', '3C','3D'),]\nggplot(data=sub_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins=20) +\n  facet_wrap(~CLASS) +\n  labs(y='Number of students', x='Math scores')\n\n\n\n\nNYX: We can also overlay multiple histograms together.\nStatisticsGlobe\nFacetted histograms with overlaid normal curves\n\nggplot(data=sub_data,\n       aes(x=MATHS, fill = GENDER)) +\n  geom_histogram(position = \"identity\", alpha=0.2, bins=20) +\n\n  labs(y='Number of students', x='Math scores')\n\n\n\n\n\n\n1.9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins=20) +\n  facet_grid(~CLASS) +\n  labs(y='Number of students', x='Math scores')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "title": "Hands-on Exercise 1",
    "section": "1.10 Essential Grammatical Elements in ggplot2: Coordinates",
    "text": "1.10 Essential Grammatical Elements in ggplot2: Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n-   [`coord_cartesian()`](https://ggplot2.tidyverse.org/reference/coord_cartesian.html): the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out).\n-   [`coord_flip()`](https://ggplot2.tidyverse.org/reference/coord_flip.html): a cartesian system with the x and y flipped.\n-   [`coord_fixed()`](https://ggplot2.tidyverse.org/reference/coord_fixed.html): a cartesian system with a \"fixed\" aspect ratio (e.g. 1.78 for a \"widescreen\" plot).\n-   [`coord_quickmap()`](https://ggplot2.tidyverse.org/reference/coord_map.html): a coordinate system that approximates a good aspect ratio for maps.\n\n1.10.1 Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n1.10.2 Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5) +\n  coord_cartesian (xlim=c(0,100),\n                   ylim= c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "title": "Hands-on Exercise 1",
    "section": "1.11 Essential Grammatical Elements in ggplot2: themes",
    "text": "1.11 Essential Grammatical Elements in ggplot2: themes\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nBuilt-in themes include: - theme_gray() (default) - theme_bw() - theme_classic()\nA list of theme can be found at this link. Each theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title).\n\n1.11.1 Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\nTo modify components of a theme , refer to this ggplot2 webpage"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "title": "Hands-on Exercise 1",
    "section": "1.12 Reference",
    "text": "1.12 Reference\n\nHadley Wickham (2023) ggplot2: Elegant Graphics for Data Analysis. Online 3rd edition.\nWinston Chang (2013) R Graphics Cookbook 2nd edition. Online version.\nHealy, Kieran (2019) Data Visualization: A practical introduction. Online version\nLearning ggplot2 on Paper – Components\nLearning ggplot2 on Paper – Layer\nLearning ggplot2 on Paper – Scale"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class_Ex01",
    "section": "",
    "text": "pacman:: p_load(tidyverse)\n\n\nexam_data <- read_csv(\"data1/Exam_data.csv\")\n\n\n\nIn this section, I will explore the theme_minimal() and modify the components of a theme (e.g. plot fill and gridline colours).\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(panel.background = element_rect(fill ='lavender', color ='white',linetype ='solid'),\n        panel.grid.major = element_line (color= 'white', linetype = 'solid'),\n        panel.grid.minor = element_line (colour='white', size= 0.2, linetype = 'solid'),\n        plot.title= element_text(size=rel(1.5))) +\n  ggtitle('Number of students by Race') +\n  labs(y='Number of students')\n\nReference website : R bloggers (How to change the background colour of ggplot2?)\nTo modify components of a theme , refer to this ggplot2 webpage\n\n\n\n\n\n\nThere are several flaws in the design below, namely:\n\ny-axis label is not clear (i.e. count)\nTo support effective comparison, the bars should be sorted by their respective frequencies.\nFor static graph, frequency values should be added to provide addition information. (labelled on the graph)\n\n\n\nCode\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\nThe designs below are improvised versions with the following features:\n\nBoth axes labelled clearly.\nBars are sorted by - count (descending order).\nCount and percentage are labelled above the bars.\n\n\nMakeover 1 (NYX)Makeover 1 code chunk\n\n\n\n\n\n\n\n\n\n\nexam_data %>%\n  group_by(RACE) %>% \n  summarise(count = n())\n\n# A tibble: 4 × 2\n  RACE    count\n  <chr>   <int>\n1 Chinese   193\n2 Indian     12\n3 Malay     108\n4 Others      9\n\n\nTHe output of the code below is C,M,I O\n\nt <- exam_data %>%\n  group_by(RACE) %>% \n  summarise(count = n())\n\nreorder(t$RACE, (-t$count))\n\n[1] Chinese Indian  Malay   Others \nattr(,\"scores\")\nChinese  Indian   Malay  Others \n   -193     -12    -108      -9 \nLevels: Chinese Malay Indian Others\n\n\n\nexam_data %>%\n  group_by(RACE) %>% \n  summarise(count = n()) %>% \n  ggplot(aes(x = reorder(RACE, (-count)), y = count)) +\n  geom_bar(stat = 'identity', color='black', fill = '#DD8888') +\n  ylim(0,220) +\n  geom_text(aes(label = paste0(count,', ', round(count/sum(count)*100,1), '%')),\n            position = position_dodge(width = 0.8), vjust= -1, size = 3.5) +\n  ggtitle('Distribution of Race') +\n  labs(y='No. \\nof \\nPupils', x = 'Race') +\n  theme(plot.title = element_text(face='bold', hjust = 0.5),   #bold title and center-justify\n        axis.title.y=element_text(angle=0)) \n\nMeaning of the argument ‘identity’ in the ‘stat’ parameter:\nIf we provide the argument stat=“identity” to geom_bar() then we’re telling R to calculate the sum of the y variable, grouped by the x variable and use bars to display the sums\nThere are three arguments in the reorder() function.\n\ncategorical variable to be sorted\nvariable to sort (1) by\na function that returns numerical value on how to sort (1) by\n\nReferences:\nhttps://www.roelpeters.be/reorder-ggplot2-bar-chart-by-count/ http://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization#bar-plot-with-labels\n\n\n\n\nMakeover 2 (Prof)Makeover 2 code chunkUnderstanding Reorder()\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=reorder(RACE,RACE,\n                     function(x)-length(x)))) +\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\nOutput of the code below is C,M,I,O\n\nreorder(exam_data$RACE,exam_data$RACE,function(x)-length(x))\n\n  [1] Malay   Malay   Chinese Chinese Malay   Malay   Chinese Malay   Malay  \n [10] Indian  Chinese Malay   Chinese Chinese Chinese Chinese Malay   Malay  \n [19] Malay   Malay   Malay   Malay   Chinese Others  Malay   Malay   Malay  \n [28] Malay   Indian  Indian  Malay   Malay   Chinese Malay   Chinese Malay  \n [37] Chinese Chinese Malay   Chinese Malay   Malay   Malay   Malay   Malay  \n [46] Chinese Chinese Chinese Indian  Malay   Chinese Chinese Chinese Malay  \n [55] Chinese Chinese Chinese Malay   Chinese Chinese Malay   Indian  Malay  \n [64] Chinese Malay   Malay   Malay   Malay   Chinese Chinese Malay   Malay  \n [73] Malay   Chinese Malay   Chinese Malay   Malay   Malay   Indian  Malay  \n [82] Malay   Chinese Chinese Malay   Indian  Chinese Chinese Chinese Chinese\n [91] Malay   Malay   Malay   Chinese Chinese Chinese Chinese Malay   Malay  \n[100] Malay   Chinese Chinese Chinese Chinese Malay   Chinese Chinese Others \n[109] Indian  Chinese Malay   Chinese Malay   Malay   Chinese Malay   Chinese\n[118] Chinese Chinese Chinese Malay   Malay   Malay   Chinese Malay   Malay  \n[127] Chinese Chinese Malay   Malay   Chinese Chinese Chinese Malay   Chinese\n[136] Chinese Malay   Others  Malay   Chinese Chinese Malay   Chinese Chinese\n[145] Chinese Malay   Chinese Chinese Malay   Others  Malay   Chinese Malay  \n[154] Malay   Chinese Chinese Malay   Chinese Others  Malay   Malay   Malay  \n[163] Malay   Chinese Malay   Chinese Chinese Others  Malay   Chinese Chinese\n[172] Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese\n[181] Malay   Chinese Chinese Chinese Chinese Chinese Chinese Chinese Malay  \n[190] Chinese Chinese Chinese Chinese Chinese Malay   Chinese Indian  Malay  \n[199] Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese\n[208] Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese Chinese\n[217] Chinese Chinese Malay   Chinese Chinese Chinese Chinese Chinese Chinese\n[226] Chinese Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese\n[235] Chinese Malay   Chinese Chinese Malay   Chinese Malay   Malay   Malay  \n[244] Chinese Chinese Indian  Malay   Others  Malay   Chinese Chinese Chinese\n[253] Chinese Chinese Malay   Malay   Chinese Chinese Chinese Chinese Chinese\n[262] Chinese Chinese Malay   Chinese Chinese Malay   Chinese Chinese Malay  \n[271] Chinese Malay   Chinese Others  Chinese Chinese Malay   Malay   Malay  \n[280] Chinese Indian  Chinese Chinese Chinese Chinese Chinese Malay   Chinese\n[289] Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese Chinese\n[298] Chinese Malay   Malay   Chinese Chinese Chinese Chinese Chinese Chinese\n[307] Chinese Chinese Chinese Indian  Chinese Chinese Malay   Chinese Chinese\n[316] Chinese Chinese Chinese Others  Chinese Chinese Chinese\nattr(,\"scores\")\nChinese  Indian   Malay  Others \n   -193     -12    -108      -9 \nLevels: Chinese Malay Indian Others\n\n\n\n\n\n\nMakeover 3 (Forcats package)Makeover 3 code chunkUnderstanding fct_infreq\n\n\n\n\n\n\n\n\n\n\nexam_data %>%\n  mutate(RACE = fct_infreq(RACE)) %>%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(..count.., \", \", \n      round(..count../sum(..count..)*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))\n\n\n\nOutput of the code below is also C,M,I,O\n\nfct_infreq(exam_data$RACE)\n\n  [1] Malay   Malay   Chinese Chinese Malay   Malay   Chinese Malay   Malay  \n [10] Indian  Chinese Malay   Chinese Chinese Chinese Chinese Malay   Malay  \n [19] Malay   Malay   Malay   Malay   Chinese Others  Malay   Malay   Malay  \n [28] Malay   Indian  Indian  Malay   Malay   Chinese Malay   Chinese Malay  \n [37] Chinese Chinese Malay   Chinese Malay   Malay   Malay   Malay   Malay  \n [46] Chinese Chinese Chinese Indian  Malay   Chinese Chinese Chinese Malay  \n [55] Chinese Chinese Chinese Malay   Chinese Chinese Malay   Indian  Malay  \n [64] Chinese Malay   Malay   Malay   Malay   Chinese Chinese Malay   Malay  \n [73] Malay   Chinese Malay   Chinese Malay   Malay   Malay   Indian  Malay  \n [82] Malay   Chinese Chinese Malay   Indian  Chinese Chinese Chinese Chinese\n [91] Malay   Malay   Malay   Chinese Chinese Chinese Chinese Malay   Malay  \n[100] Malay   Chinese Chinese Chinese Chinese Malay   Chinese Chinese Others \n[109] Indian  Chinese Malay   Chinese Malay   Malay   Chinese Malay   Chinese\n[118] Chinese Chinese Chinese Malay   Malay   Malay   Chinese Malay   Malay  \n[127] Chinese Chinese Malay   Malay   Chinese Chinese Chinese Malay   Chinese\n[136] Chinese Malay   Others  Malay   Chinese Chinese Malay   Chinese Chinese\n[145] Chinese Malay   Chinese Chinese Malay   Others  Malay   Chinese Malay  \n[154] Malay   Chinese Chinese Malay   Chinese Others  Malay   Malay   Malay  \n[163] Malay   Chinese Malay   Chinese Chinese Others  Malay   Chinese Chinese\n[172] Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese\n[181] Malay   Chinese Chinese Chinese Chinese Chinese Chinese Chinese Malay  \n[190] Chinese Chinese Chinese Chinese Chinese Malay   Chinese Indian  Malay  \n[199] Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese\n[208] Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese Chinese\n[217] Chinese Chinese Malay   Chinese Chinese Chinese Chinese Chinese Chinese\n[226] Chinese Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese\n[235] Chinese Malay   Chinese Chinese Malay   Chinese Malay   Malay   Malay  \n[244] Chinese Chinese Indian  Malay   Others  Malay   Chinese Chinese Chinese\n[253] Chinese Chinese Malay   Malay   Chinese Chinese Chinese Chinese Chinese\n[262] Chinese Chinese Malay   Chinese Chinese Malay   Chinese Chinese Malay  \n[271] Chinese Malay   Chinese Others  Chinese Chinese Malay   Malay   Malay  \n[280] Chinese Indian  Chinese Chinese Chinese Chinese Chinese Malay   Chinese\n[289] Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese Chinese\n[298] Chinese Malay   Malay   Chinese Chinese Chinese Chinese Chinese Chinese\n[307] Chinese Chinese Chinese Indian  Chinese Chinese Malay   Chinese Chinese\n[316] Chinese Chinese Chinese Others  Chinese Chinese Chinese\nLevels: Chinese Malay Indian Others\n\n\n\n\n\nSorting a boxplot by median of Math scores using reorder().\nIn the viz below, we are able to achieve several things in one go\n\nsort the boxplot by median of the Math scores in descending order.\nadd mean value by Race\nuse colours to distinguish between outliers and jitters\n\n\nBoxplot designCode ChunkReorder()\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = reorder(RACE, -MATHS, median), y = MATHS, fill=RACE)) +\n   geom_boxplot(outlier.colour=\"blue\", outlier.size=1) +\n   geom_point(position = 'jitter',size=0.5) +\n   stat_summary(fun.y=mean, geom=\"point\", shape=20, size=3, color=\"pink\", fill=\"red\") +\n   xlab(\"Race\") +\n   ylab(\"Math Score\") +\n   ggtitle(\"Math Scores by Race\") +\n   scale_fill_brewer(palette='Set2') +\n   theme(plot.title = element_text(hjust = 0.5),\n         legend.position = 'none')\n\nReference: Link\n\n\n\n\nCode\nreorder(exam_data$RACE, -exam_data$MATHS, median)\n\n\n  [1] Malay   Malay   Chinese Chinese Malay   Malay   Chinese Malay   Malay  \n [10] Indian  Chinese Malay   Chinese Chinese Chinese Chinese Malay   Malay  \n [19] Malay   Malay   Malay   Malay   Chinese Others  Malay   Malay   Malay  \n [28] Malay   Indian  Indian  Malay   Malay   Chinese Malay   Chinese Malay  \n [37] Chinese Chinese Malay   Chinese Malay   Malay   Malay   Malay   Malay  \n [46] Chinese Chinese Chinese Indian  Malay   Chinese Chinese Chinese Malay  \n [55] Chinese Chinese Chinese Malay   Chinese Chinese Malay   Indian  Malay  \n [64] Chinese Malay   Malay   Malay   Malay   Chinese Chinese Malay   Malay  \n [73] Malay   Chinese Malay   Chinese Malay   Malay   Malay   Indian  Malay  \n [82] Malay   Chinese Chinese Malay   Indian  Chinese Chinese Chinese Chinese\n [91] Malay   Malay   Malay   Chinese Chinese Chinese Chinese Malay   Malay  \n[100] Malay   Chinese Chinese Chinese Chinese Malay   Chinese Chinese Others \n[109] Indian  Chinese Malay   Chinese Malay   Malay   Chinese Malay   Chinese\n[118] Chinese Chinese Chinese Malay   Malay   Malay   Chinese Malay   Malay  \n[127] Chinese Chinese Malay   Malay   Chinese Chinese Chinese Malay   Chinese\n[136] Chinese Malay   Others  Malay   Chinese Chinese Malay   Chinese Chinese\n[145] Chinese Malay   Chinese Chinese Malay   Others  Malay   Chinese Malay  \n[154] Malay   Chinese Chinese Malay   Chinese Others  Malay   Malay   Malay  \n[163] Malay   Chinese Malay   Chinese Chinese Others  Malay   Chinese Chinese\n[172] Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese\n[181] Malay   Chinese Chinese Chinese Chinese Chinese Chinese Chinese Malay  \n[190] Chinese Chinese Chinese Chinese Chinese Malay   Chinese Indian  Malay  \n[199] Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese Chinese\n[208] Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese Chinese\n[217] Chinese Chinese Malay   Chinese Chinese Chinese Chinese Chinese Chinese\n[226] Chinese Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese\n[235] Chinese Malay   Chinese Chinese Malay   Chinese Malay   Malay   Malay  \n[244] Chinese Chinese Indian  Malay   Others  Malay   Chinese Chinese Chinese\n[253] Chinese Chinese Malay   Malay   Chinese Chinese Chinese Chinese Chinese\n[262] Chinese Chinese Malay   Chinese Chinese Malay   Chinese Chinese Malay  \n[271] Chinese Malay   Chinese Others  Chinese Chinese Malay   Malay   Malay  \n[280] Chinese Indian  Chinese Chinese Chinese Chinese Chinese Malay   Chinese\n[289] Chinese Chinese Chinese Chinese Malay   Chinese Chinese Chinese Chinese\n[298] Chinese Malay   Malay   Chinese Chinese Chinese Chinese Chinese Chinese\n[307] Chinese Chinese Chinese Indian  Chinese Chinese Malay   Chinese Chinese\n[316] Chinese Chinese Chinese Others  Chinese Chinese Chinese\nattr(,\"scores\")\nChinese  Indian   Malay  Others \n  -79.0   -58.5   -61.5   -70.0 \nLevels: Chinese Others Malay Indian\n\n\n\n\n\n\n\n\nThere are several flaws in the design below, namely:\n\nThe outline of the bars is unclear\nUnable to see how the scores are binned\nAddition of reference line (e.g. 75th percentile) will help users get a better understanding of the data.\n\n\n\nCode\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(binwidth=5)\n\n\n\n\n\nThe designs below are improvised version with the following features:\nMakeover 1:\n\nIncludes the 50th and 75th percentile line in the plot.\n\nMakeover 2:\n\nAdding mean and median lines on the histogram plot.\nChange fill color and line color\n\n\nMakeover design 1 (NYX)Makeover 1 code chunk (NYX)\n\n\n\n\n\n\n\n\n\n\nq <- quantile(exam_data$MATHS, probs = c(0.25, 0.5, 0.75))\n\nggplot(data=exam_data,\n  aes(x=MATHS)) +\n  geom_histogram(binwidth = 5, color='black',size= 0.3, fill = '#DD8888') +\n  geom_vline(xintercept = q[2], linetype='dotted', size = 0.8, color='blue') +\n  geom_vline(xintercept = q[3], linetype='dotted', size = 0.8) +\n  annotate('text' , x= 70, y=50, label='50th \\npercentile', size = 3) +\n  annotate('text' , x= 90, y=50, label='75th \\npercentile', size = 3) +\n  labs(y= 'No. of \\nPupils', x='math Score') +\n  theme(axis.title.y=element_text(angle = 0)) +\n  ggtitle('Distribution of Math scores')\n\nReference: link\n\n\n\n\nMakeover Design 2 (Adapted from Prof)Makeover 2 code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  geom_vline(aes(xintercept = mean(MATHS, na.rm=T)),\n             color='red',\n             linetype = 'dashed',\n             size = 1) +\n  annotate(\"text\", x=65, y=50, label=\"mean\", angle=0, size = 4) +\n  geom_vline(aes(xintercept = median(MATHS, na.rm=T)),\n             color='gray30',\n             linetype = 'dashed',\n             size = 1) +\n  annotate(\"text\", x=79, y=50, label=\"median\", angle=0, size = 4)\n\n\n\n\n\n\n\nThe viz below shows the distribution by gender. How can we make it more informative? Could we try to add a background layer of histogram that describe the overall distribution of ENGLISH scores?\n\n\nCode\nggplot(data=exam_data,\n       aes(x=ENGLISH, fill= GENDER)) +\n  geom_histogram(bins=20) +\n  facet_wrap(~GENDER)\n\n\n\n\n\nThe makeover design below now include overall distribution in the backgrounds of the trellis plots by gender.\n\nMakeover design 1Makeover 1 code chunk\n\n\n\n\n\n\n\n\n\n\nd_bg <- exam_data[, -3]  # background data without GENDER column\nggplot(data=exam_data,\n       aes(x=ENGLISH, fill=GENDER)) +\n  geom_histogram(data=d_bg, bins=20, fill='grey',alpha=0.5) +\n  geom_histogram(colour='black') +\n  facet_wrap(~GENDER) +\n  guides(fill=FALSE) + \n  theme_minimal() +\n  labs(y= 'No. of \\nPupils', x='English Score') +\n  theme(axis.title.y=element_text(angle = 0)) +\n  ggtitle('Distribution of English scores by Gender')\n\nThe geom_histogram() function is used twice to create two overlapping histograms.\nThe first histogram is created using the d_bg dataset (no GENDER data, rep all GENDERs) and is filled with grey. This histogram represents the background distribution of ENGLISH marks across ALL GENDERs.\nThe second histogram is created using the entire exam dataset and makes use of the fill = GENDER in ggplot() to color gender differently. This results in a legend and is removed with guides(fill=FALSE). It also has a black border. This histogram represents the distribution of ENGLISH scores for each individual GENDER.\nFinally, facet_wrap(~GENDER) will create panels to represent distribution for each GENDER for easy comparison.\nReference: Plot background histogram data\n\n\n\n\n\n\nThe original design below has several flaws:\n\nThe limits and scale ticks of both axes are inconsistent.\n\n\n\nCode\nggplot(data=exam_data,\n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point()\n\n\n\n\n\nThe improvised design in Makeover 1 now includes:\n\nCommon x and Y axes scale and range.\nReference lines at 50 marks for both subjects.\n\n\nMakeover 1Makeover 1 code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  ylim(0,100) +\n  xlim(0,100) +\n  geom_vline(xintercept=50, linetype='dashed') +\n  geom_hline(yintercept=50, linetype='dashed')\n\n\n\n\nIn makeover 2, I have included a third numerical variable, Science score into the scatterplot.\nThe position of the legend has been shifted to the bottom.\nIn makeover 3, I have used the ggExtra library to add distribution of the English and Math scores in the form of histograms at the margins of the plot.\n\nMakeover 2Makeover 3\n\n\n\n\nCode\nggplot(data=exam_data,\n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point(aes(color=SCIENCE)) +\n  ylim(0,100) +\n  xlim(0,100) +\n  geom_vline(xintercept=50, linetype='dashed') +\n  geom_hline(yintercept=50, linetype='dashed') +\n  ggtitle('Scatterplot of English and Math scores') +\n  theme_minimal() +\n  theme(legend.position='bottom') +\n  scale_color_gradient(low=\"darkgreen\", high=\"green\")\n\n\n\n\n\n\n\n\n\nCode\nlibrary(ggExtra)\n\nggMarginal(ggplot(data=exam_data,\n       aes(x=MATHS, y=ENGLISH)) +\n  geom_point(aes(color=SCIENCE)) +\n  ylim(0,100) +\n  xlim(0,100) +\n  geom_vline(xintercept=50, linetype='dashed') +\n  geom_hline(yintercept=50, linetype='dashed') +\n  ggtitle('Scatterplot of English and Math scores') +\n  theme_minimal() +\n  theme(legend.position='bottom') +\n  scale_color_gradient(low=\"darkgreen\", high=\"green\"), \n  \n  type=\"histogram\", fill =4)\n\n\n\n\n\nReference: ‘How to change ggplot2 colours manually and automatically?’"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications HomePage! In this website, you will find my coursework."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "To be updated"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "In this chapter, I will be learning several ggplot2 extensions for creating more elegant and effective statistical graphics. They are\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package,\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,\nplot composite figure by combining ggplot2 graphs by using patchwork package.\n\n\n\n\n\n\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them onto my working R environment.\n\npacman:: p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\n\n\nFor the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data <- read_csv('data/Exam_data.csv')\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n\n\n\n\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(y=ENGLISH, x=MATHS)) + \n  geom_point() +\n  geom_label(aes(label=ID))\n\n\n\n\nggrepel  is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text as in our examples on the right.\n\nWe simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel.\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\", max.overlaps = 15) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\nggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(binwidth=5, \n                 color= 'black',\n                 fill='grey90') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\nRefer to this link to learn more about ggplot2 Themes\n\n\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nIn the example below, The Economist theme is used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(binwidth=5,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90',size=0.8) +\n  theme_economist() +\n  labs(y= 'No. of \\nPupils') +\n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\nIt also provides some extra geoms and scales for ‘ggplot2’. Consult this vignette to learn more.\n\n\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(binwidth=5,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90') +\n  theme_ipsum() +\n  labs(y= 'No. of \\nPupils') +\n  theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(binwidth=5,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90') +\n  theme_ipsum(axis_title_size = 18,\n              base_size=15,\n              grid= 'Y') +\n labs(y= 'No. of \\nPupils') +\n theme(axis.title.y=element_text(angle = 0,\n                                  vjust=0.9)) +\n  ggtitle('Distribution of Math scores')\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines.\n\n\n\n\n\n\n\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, you will learn how to create composite plot by combining multiple graphs. First, let us create three statistical graphics by using the code chunk below.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\nLastly, we will draw a scatterplot for English score versus Maths score by as shown below\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n\nFigure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo learn more about, refer to Plot Assembly.\n\n\n\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\nThe plotThe code"
  }
]