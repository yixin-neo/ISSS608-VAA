{
  "hash": "98d3a97b683ddbd00caf3b66363fea96",
  "result": {
    "markdown": "---\ntitle: \"Project_MC2\"\nauthor: \"NeoYX\"\ndate: '15 May 2023'\ndate-modified: \"2023-05-20\"\neditor: visual\nexecute: \n  freeze: auto\n  warning: false\n  echo: true\n  message: true\nformat:\n  html:\n    code-fold: true\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n---\n\n\n::: callout-note\n**Edge data** should be organised as such: (can use dplyr methods)\n\nFirst column: Source id (FK to Node second column) - compulsory\n\nSecond column: Target id (FK to Node second column) - compulsory\n\n**Node data**\n\nFirst column: ID - compulsory\n\nSecond column: Label (contains all the distinct values of source and target in Edge data) (only need if Id are all integers) (what is present in edge data must exists in Labels of node data, must not be missing in node data)\n:::\n\n::: callout-warning\nTry not to use R built-in NA/NULL function. Manually type \"unknown' / 'missing' as a value instead.\n:::\n\n# 1 About the dataset\n\n## 1.1 Data dictionary\n\n**Node Attributes:**\n\nid \\-- Name of the company that originated (or received) the shipment\n\nshpcountry \\-- Country the company most often associated with when shipping\n\nrcvcountry \\-- Country the company most often associated with when receiving\n\ndataset \\-- Always 'MC2'\n\n**Edge Attributes:**\n\narrivaldate \\-- Date the shipment arrived at port in YYYY-MM-DD format.\n\nhscode \\-- Harmonized System code for the shipment. Can be joined with the hscodes table to get additional details.\n\nvalueofgoods_omu \\-- Customs-declared value of the total shipment, in Oceanus\n\nMonetary Units (OMU)\n\nvolumeteu \\-- The volume of the shipment in 'Twenty-foot equivalent units', roughly how many 20-foot standard containers would be required. (Actual number of\n\ncontainers may have been different as there are 20ft and 40ft standard containers and tankers that do not use containers)\n\nweightkg \\-- The weight of the shipment in kilograms (if known)\n\ndataset \\-- Always 'MC2'\n\ntype \\-- Always 'shipment' for MC2\n\ngenerated_by \\-- Name of the program that generated the edge. (Only found on 'bundle' records.)\n\n## 1.2 Importing the datasets\n\nImport libraries\n\nThe new libraries used today are :\n\n-   `jsonlite` to import json file\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, igraph, tidygraph, ggraph,\n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts,knitr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMC2 <- jsonlite::fromJSON(\"C:/yixin-neo/ISSS608-VAA/Project/data/mc2_challenge_graph.json\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncarp <- jsonlite::fromJSON(\"C:/yixin-neo/ISSS608-VAA/Project/data/bundles/carp.json\")\n```\n:::\n\n\nPull out the nodes and edge data and save them as tibble data frames.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMC2_nodes <- as_tibble(MC2$nodes) %>% \n  select(id,shpcountry,rcvcountry)\n```\n:::\n\n\nRearranging the columns in edge file as we require `source` and `target` columns to be the first two columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMC2_edges <- as_tibble(MC2$links) %>% \n  select(source,target,arrivaldate,hscode,valueofgoods_omu,volumeteu,weightkg,valueofgoodsusd)  \n# can exclude dataste column as they all contain the same values.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(MC2_nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 34,576\nColumns: 3\n$ id         <chr> \"AquaDelight Inc and Son's\", \"BaringoAmerica Marine Ges.m.b…\n$ shpcountry <chr> \"Polarinda\", NA, \"Oceanus\", NA, \"Oceanus\", \"Kondanovia\", NA…\n$ rcvcountry <chr> \"Oceanus\", NA, \"Oceanus\", NA, \"Oceanus\", \"Utoporiana\", NA, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(MC2_edges)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5,464,378\nColumns: 8\n$ source           <chr> \"AquaDelight Inc and Son's\", \"AquaDelight Inc and Son…\n$ target           <chr> \"BaringoAmerica Marine Ges.m.b.H.\", \"BaringoAmerica M…\n$ arrivaldate      <chr> \"2034-02-12\", \"2034-03-13\", \"2028-02-07\", \"2028-02-23…\n$ hscode           <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"47…\n$ valueofgoods_omu <dbl> 141015, 141015, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ volumeteu        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ weightkg         <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, …\n$ valueofgoodsusd  <dbl> NA, NA, NA, NA, NA, NA, 87110, 188140, NA, 221110, 58…\n```\n:::\n:::\n\n\n## 1.3 Data cleaning\n\n### 1.3.1 Check for null values\n\nCheck whether each column in MC2_nodes and MC2_edges contains null and prints the percentage of null for each column.\n\n**For MC2_nodes dataframe;**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for null values in each column\nnull_counts_nodes <- sapply(MC2_nodes, function(x) sum(is.null(x) | is.na(x)))\n\n# Calculate the percentage of null values for each column\nnull_percentages_nodes <- null_counts_nodes / nrow(MC2_nodes) * 100\n\n# Display the results\n#print(null_percentages)\n\nknitr::kable(null_percentages_nodes, \"simple\")\n```\n\n::: {.cell-output-display}\nx\n-----------  ---------\nid             0.00000\nshpcountry    64.66624\nrcvcountry     8.41335\n:::\n:::\n\n\n**For MC2_edges dataframe:**\n\nAs there are a lot zeros inside MC2_edges\\$volumteu col, we will consider 0 as equivalent to null values.\n\nWe can see that the columns `valueofgoods_omu` and `volumeteu` are mainly null. `valueofgoodusd` column contains more than 50% null values. There are 4 records of `source` with 0 as value, but 0 is their unique identifier so we do not consider 0 as null in `source` column. It means to say that only `source`, `target`, `arrivaldate`, `hscode` and `weight` columns will be helpful in our analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for null values in each column\nnull_counts <- sapply(MC2_edges, function(x) sum(is.null(x) | is.na(x) | x==0))\n\n# Calculate the percentage of null values for each column\nnull_percentages <- null_counts / nrow(MC2_edges) * 100\n\n# Display the results\n#print(null_percentages)\n\nknitr::kable(null_percentages, \"simple\")\n```\n\n::: {.cell-output-display}\nx\n-----------------  -----------\nsource               0.0000732\ntarget               0.0000000\narrivaldate          0.0000000\nhscode               0.0000000\nvalueofgoods_omu    99.9948576\nvolumeteu           85.6684146\nweightkg             1.0136561\nvalueofgoodsusd     55.3358864\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n### 1.3.2 Lets check for duplicates\n\n**For MC2_nodes dataframe:**\n\nThere are no duplicated nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#duplicated only\nany(duplicated(MC2_nodes))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n\n**For MC2_edges dataframe:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#duplicated only\nprint(any(duplicated(MC2_edges)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nMC2_edges_dup <- MC2_edges[duplicated(MC2_edges), ]\n```\n:::\n\n::: {.cell}\n\n:::\n\n\nCheck on the HScodes. Starts with 100630, and it doesnt match with any of the real hscodes from [link](https://www.wcoomd.org/en/topics/nomenclature/instrument-and-tools/hs-nomenclature-2022-edition/hs-nomenclature-2022-edition.aspx). We will not be using this column as of now...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMC2_edges[startsWith(MC2_edges$hscode, \"852\"), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 56,263 × 8\n   source          target arrivaldate hscode valueofgoods_omu volumeteu weightkg\n   <chr>           <chr>  <chr>       <chr>             <dbl>     <dbl>    <int>\n 1 French Crab S.… Mar d… 2028-04-07  852872               NA         0       65\n 2 French Crab S.… -1992  2028-01-02  852990               NA         0     2830\n 3 French Crab S.… -1992  2028-01-02  852990               NA         0     2230\n 4 French Crab S.… -1992  2028-01-02  852872               NA         0     6810\n 5 French Crab S.… -1992  2028-01-02  852990               NA         0     2830\n 6 French Crab S.… -1992  2028-01-02  852990               NA         0     2830\n 7 French Crab S.… -1992  2028-01-02  852990               NA         0      805\n 8 French Crab S.… -1992  2028-01-02  852990               NA         0    10625\n 9 French Crab S.… -1992  2028-01-02  852990               NA         0     1895\n10 French Crab S.… -1992  2028-01-02  852990               NA         0     5425\n# ℹ 56,253 more rows\n# ℹ 1 more variable: valueofgoodsusd <dbl>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}