---
title: "Hands-on_Ex02"
author: "NeoYX"
editor: visual
execute: 
  freeze: auto
  warning: false
  #echo: false
  html:
    code-fold: false
    code-overflow: scroll
    code-summary: "Show the code"
    code-line-numbers: true
---

# 2 Beyond ggplot2 fundamentals

## 2.1 Overview

In this chapter, I will be learning several ggplot2 extensions for creating more elegant and effective statistical graphics. They are

-   control the placement of annotation on a graph by using functions provided in ggrepel package,

-   create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,

-   plot composite figure by combining ggplot2 graphs by using patchwork package.

## 2.2 Getting started

### 2.2.1 Installing and loading the required libraries

In this exercise, beside tidyverse, four R packages will be used. They are:

-   ggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.

-   ggthemes: an R package provides some extra themes, geoms, and scales for 'ggplot2'.

-   hrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.

-   patchwork: an R package for preparing composite figure created using ggplot2.

Code chunk below will be used to check if these packages have been installed and also will load them onto my working R environment.

```{r}

pacman:: p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)

```

### 2.2.2 Importing data

For the purpose of this exercise, a data file called *Exam_data* will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.

The code chunk below imports *exam_data.csv* into R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package. **readr** is one of the tidyverse package.

```{r}
exam_data <- read_csv('data/Exam_data.csv')
```

There are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.

-   The categorical attributes are: ID, CLASS, GENDER and RACE.

-   The continuous attributes are: MATHS, ENGLISH and SCIENCE.

## 2.3 Beyond ggplot2 Annotation: ggrepel

One of the challenge in plotting statistical graph is annotation, especially with large number of data points.

::: panel-tabset
#### The plot

```{r}
#| echo: false
ggplot(data=exam_data,
       aes(y=ENGLISH, x=MATHS)) + 
  geom_point() +
  geom_smooth(method=lm, size = 0.5) +
  coord_cartesian(xlim=c(0,100),
                       ylim=c(0,100)) +
  geom_label(aes(label=ID),
             hjust=0.5,
             vjust=-0.5) +
  ggtitle('English score vesus Math Score for primary 3')
```

#### The code chunk

```{r}
#| eval: false
ggplot(data=exam_data,
       aes(y=ENGLISH, x=MATHS)) + 
  geom_point() +
  geom_label(aes(label=ID))
```
:::

[**ggrepel**](https://ggrepel.slowkow.com/) ![](https://r4va.netlify.app/chap02/img/image3.jpg){width="31"} is an extension of **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping text as in our examples on the right.

![](https://r4va.netlify.app/chap02/img/image2.jpg)

We simply replace `geom_text()` by [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and `geom_label()` by [`geom_label_repel`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).
