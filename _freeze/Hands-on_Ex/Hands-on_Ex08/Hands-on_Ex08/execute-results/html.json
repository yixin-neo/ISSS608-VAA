{
  "hash": "999358d5da2307133fc6cc84d4432e0a",
  "result": {
    "markdown": "---\ntitle: \"Hands-on_Ex08 (Network graphs)\"\nauthor: \"NYX\"\ndate: '13 May 2023'\ndate-modified: \"2023-05-13\"\neditor: visual\nexecute: \n  freeze: auto\n  warning: false\n  #echo: false\n  #message: false\n  html:\n    code-fold: True\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n---\n\n::: {.cell}\n\n:::\n\n\n# **Lesson 5: Network Data Visualisation and Analysis**\n\n\\*located inchapter 27 of Prof's [E-book](https://r4va.netlify.app/chap27.html)\n\n## Overview\n\nIn this hands-on exercise, I will learn how to model, analyse and visualise network data using R.\n\nBy the end of this hands-on exercise, I will be able to:\n\n-   create graph object data frames, manipulate them using appropriate functions of *dplyr*, *lubridate*, and *tidygraph*,\n\n-   build network graph visualisation using appropriate functions of *ggraph*,\n\n-   compute network geometrics using *tidygraph*,\n\n-   build advanced graph visualisation by incorporating the network geometrics, and\n\n-   build interactive network visualisation using *visNetwork* package.\n\n## 27.2 Getting Started\n\n### 27.2.1 Installing and launching R packages\n\nIn this hands-on exercise, four network data modelling and visualisation packages will be installed and launched. They are igraph, tidygraph, ggraph and visNetwork. Beside these four packages, tidyverse and [lubridate](https://lubridate.tidyverse.org/), an R package specially designed to handle and wrangling **time** data will be installed and launched too.\n\nThe code chunk:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npacman::p_load(igraph, tidygraph, ggraph,\n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts,knitr)\n```\n:::\n\n\n## 27.3 The Data\n\nThe data sets used in this hands-on exercise is from an oil exploration and extraction company. There are two data sets. One contains the nodes data and the other contains the edges (also know as link) data.\n\n### 27.3.1 The edges data\n\n-   *GAStech-email_edges.csv* which consists of two weeks of 9063 emails correspondances between 55 employees.\n\n![](https://r4va.netlify.app/chap27/img/image2.jpg)\n\n### 27.3.2 The nodes data\n\n-   *GAStech_email_nodes.csv* which consist of the names, department and title of the 55 employees.\n\n![](https://r4va.netlify.app/chap27/img/image1.jpg)\n\n### 27.3.3 Importing network data from files\n\nIn this step, you will import GAStech_email_node.csv and GAStech_email_edges-v2.csv into RStudio environment by using `read_csv()` of **readr** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGAStech_nodes <- read_csv('data/GAStech_email_node.csv')\nGAStech_edges <- read_csv('data/GAStech_email_edge-v2.csv')\n```\n:::\n\n\n### 27.3.4 Reviewing the imported data\n\nNext, we will examine the structure of the data frame using *glimpse()* of **dplyr**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(GAStech_edges)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 9,063\nColumns: 8\n$ source      <dbl> 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      <dbl> 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    <chr> \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    <time> 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     <chr> \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject <chr> \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel <chr> \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel <chr> \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n```\n:::\n\n```{.r .cell-code}\n# list()\n# summary()\n# class ()\n```\n:::\n\n\n::: callout-warning\nThe output report of GAStech_edges above reveals that the *SentDate* is treated as \\\"Character\\\" data type instead of *date* data type. We have to change the data type of *SentDate* field back to \\\"Date\\\"\\\" data type.\n:::\n\n### 27.3.5 Wrangling time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGAStech_edges <- GAStech_edges %>% \n  mutate(SentDate = dmy(SentDate)) %>% \n  mutate(Weekday = wday(SentDate,\n                         label = TRUE,  # ordered factor if true\n                         abbr = FALSE))\n```\n:::\n\n\n::: callout-note\n## Learning from codes above\n\n-   both *dmy()* and *wday()* are functions of **lubridate** package. [lubridate](https://r4va.netlify.app/cran.r-project.org/web/packages/lubridate/vignettes/lubridate.html) is an R package that makes it easier to work with dates and times.\n\n-   *dmy()* transforms the SentDate to Date data type.\n\n-   *wday()* returns the day of the week as a decimal number (1-7) or an ordered factor (Monday, Tuesday,..) if label is TRUE. The argument abbr is FALSE keep the daya spells in full, i.e. Monday. The function will create a new column in the data.frame i.e. Weekday and the output of *wday()* will save in this newly created field.\n\n-   the values in the *Weekday* field are in ordinal scale.\n:::\n\n### 27.3.6 Reviewing the revised date fields\n\nTable below shows the data structure of the reformatted *GAStech_edges* data frame using knitr::kable() function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(GAStech_edges,5), \"simple\")\n```\n\n::: {.cell-output-display}\nsource   target  SentDate     SentTime   Subject                             MainSubject    sourceLabel     targetLabel       Weekday \n-------  -------  -----------  ---------  ----------------------------------  -------------  --------------  ----------------  --------\n     43       41  2014-01-06   08:39:00   GT-SeismicProcessorPro Bug Report   Work related   Sven.Flecha     Isak.Baza         Monday  \n     43       40  2014-01-06   08:39:00   GT-SeismicProcessorPro Bug Report   Work related   Sven.Flecha     Lucas.Alcazar     Monday  \n     44       51  2014-01-06   08:58:00   Inspection request for site         Work related   Kanon.Herrero   Felix.Resumir     Monday  \n     44       52  2014-01-06   08:58:00   Inspection request for site         Work related   Kanon.Herrero   Hideki.Cocinaro   Monday  \n     44       53  2014-01-06   08:58:00   Inspection request for site         Work related   Kanon.Herrero   Inga.Ferro        Monday\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}