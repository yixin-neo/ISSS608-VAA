{
  "hash": "1ee783cf1340f1608a8e217a67ffe11d",
  "result": {
    "markdown": "---\ntitle: \"In-class_Ex01\"\nauthor: \"NeoYX\"\neditor: visual\nexecute: \n  freeze: auto\n  warning: false\n  #echo: false\n  html:\n    code-fold: false\n    code-overflow: wrap\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n---\n\n\n# In-class Exercise 1: Programming Elegant DataVis with ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman:: p_load(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data1/Exam_data.csv\")\n```\n:::\n\n\n## Task 1: Plotting a bar chart\n\nIn this section, I will explore the theme_minimal() and change the gridline colours.\n\nReference website : [R bloggers](https://www.r-bloggers.com/2022/07/how-to-change-background-color-in-ggplot2-3/) (How to change the background colour of ggplot2?)\n\nTo modify components of a theme , refer to this ggplot2 [webpage](https://ggplot2.tidyverse.org/reference/theme.html)\n\n::: panel-tabset\n## The plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## The code chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(panel.background = element_rect(fill ='lightblue', color ='black', linetype = 'dotted'),\n        panel.grid.major = element_line (color= 'red', linetype = 'dotted'),\n        panel.grid.minor = element_line (colour='green', size= 2, linetype = 'dotted'),\n        plot.title= element_text(size=rel(2))) +\n  ggtitle('Number of students by Race') +\n  labs(y='Number of students')\n```\n:::\n\n:::\n\n## Task 2: Improve the data visualisation of an existing simple vertical bar chart\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](In-class_Ex01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**There are several flaws in the design above, namely:**\n\n1.  y-axis label is not clear (i.e. count)\n\n2.  To support effective comparison, the bars should be sorted by their respective frequencies.\n\n3.  For static graph, frequency values should be added to provide addition information. (labelled on the graph)\n\nThe design below is an improvised version:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data %>%\n  group_by(RACE) %>% \n  summarise(count = n()) %>% \n  ggplot(aes(x = reorder(RACE, (-count)), y = count)) +\n  geom_bar(stat = 'identity', fill = 'steelblue') +\n  theme_grey() +\n  geom_text(aes(label = paste0(count,', ', round(count/sum(count)*100,1), '%')),\n            position = position_dodge(width = 0.8), vjust= -0.3, size = 3)\n```\n:::\n\nReferences:\nhttps://www.roelpeters.be/reorder-ggplot2-bar-chart-by-count/\nhttp://www.sthda.com/english/wiki/ggplot2-barplots-quick-start-guide-r-software-and-data-visualization#bar-plot-with-labels\n\n\nIf you provide the argument stat=”identity” to geom_bar() then you're telling R to calculate the sum of the y variable, grouped by the x variable and use bars to display the sums\n",
    "supporting": [
      "In-class_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}