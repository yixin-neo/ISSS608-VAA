{
  "hash": "42a9824bbe83141e07ea2fed408a2dad",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 1\"\nauthor: \"NeoYX\"\neditor: visual\nexecute: \n  freeze: auto\n  warning: false\n  #echo: false\n  html:\n    code-fold: false\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n---\n\n\nGetting Started Resources:\n\n[Markdown](https://quarto.org/docs/authoring/markdown-basics.html) -- useful for markdowns\n\n[Executionoptions](https://quarto.org/docs/computations/execution-options.html)\n\n### 1.2.1 Installing and loading the required libraries\n\nInstall and launching R packages\n\nThe code chunk below uses p_load() of [pacman](https://rpubs.com/akshaypatankar/594834) package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n### 1.2.2 Importing the data\n\nThe code chunk below imports exam_data.csv into R environment by using [read_csv()](https://readr.tidyverse.org/reference/read_delim.html) function of [readr](https://readr.tidyverse.org/) package.\n\nreadr is one of the tidyverse package.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nexam_data <- read_csv('data1/Exam_data.csv')\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## 1.3 Introducing ggplot\n\nFor more details, visit [ggplot2](https://ggplot2.tidyverse.org/).\n\nSmall cheatsheet\n\n![ggplot2](histcodes.png){width=\"200\"}\n\n### 1.3.1 R Graphics VS ggplot\n\nPlotting a simple bar chart\n\n::: panel-tabset\n#### R Graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(exam_data$MATHS, ylab='Number of students', xlab='score', main='Distribution of Math scores')\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n#### ggplot2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x=MATHS)) + \n  geom_histogram(bins=10,\n                 boundary = 100,\n                 color='black',\n                 fill='grey',size = 0.3) +\n  ggtitle('Distribution of Math Scores')\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n:::\n\n[tabsets](https://freyasystems.com/how-to-create-tabsets-using-quarto-r/) --- follow this guide to create a panel tabset\n\nWhy use ggplot2 instead of built-in plot function?\n\n[Hadley Wickham](http://varianceexplained.org/r/teach_ggplot2_to_beginners/#comment-1745406157)\n\n::: {.callout-important appearance=\"simple\"}\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive.\n:::\n\n## 1.4 Grammar of Graphics\n\nBefore we getting started using ggplot2, it is important for us to understand the principles of Grammer of Graphics.\n\nGrammar of Graphics is a general scheme for data visualization which breaks up graphs into semantic components such as scales and layers. It was introduced by Leland Wilkinson (1999) Grammar of Graphics, Springer. The grammar of graphics is an answer to a question:\n\n[What is a statistical graphic?]{.underline}\n\nIn the nutshell, Grammar of Graphics defines the rules of structuring mathematical and aesthetic elements into a meaningful graph.\n\nThere are two principles in Grammar of Graphics, they are:\n\n-   Graphics = distinct layers of grammatical elements\n\n-   Meaningful plots through aesthetic mapping\n\nA good grammar of graphics will allow us to gain insight into the composition of complicated graphics, and reveal unexpected connections between seemingly different graphics (Cox 1978). It also provides a strong foundation for understanding a diverse range of graphics. Furthermore, it may also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.\n\n### 1.4.1 A Layered Grammar of Graphics\n\nggplot2 is an implementation of Leland Wilkinson's Grammar of Graphics. [\"A layered grammar of graphics.\"](https://vita.had.co.nz/papers/layered-grammar.html)\n\nA short description of each building block are as follows:\n\n-   Data: The dataset being plotted.\n\n-   Aesthetics: Take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\n\n-   Geometrics: The visual elements used for our data, such as point, bar or line. Facets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\n\n-   Statistics: Statiscal transformations that summarise data (e.g. mean, confidence intervals).\n\n-   Coordinate systems define the plane on which data are mapped on the graphic.\n\n-   Themes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.\n\n## 1.5 Essential Grammatical Elements in ggplot2: data\n\nLet us call the ggplot() function using the code chunk on the right.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-important appearance=\"simple\"}\n-   A blank canvas appears.\n-   ggplot() initializes a ggplot object.\n-   The data argument defines the dataset to be used for plotting.\n-   If the dataset is not already a data.frame, it will be converted to one by fortify().\n:::\n\n## 1.6 Essential Grammatical Elements in ggplot2: [Aesthetic mappings](https://ggplot2.tidyverse.org/articles/ggplot2-specs.html)\n\nThe aesthetic mappings take attributes of the data and and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can thus encode an aspect of the data and be used to convey information.\n\nAll aesthetics of a plot are specified in the [aes()](https://ggplot2.tidyverse.org/reference/aes.html) function call (in later part of this lesson, you will see that each geom layer can have its own aes specification)\n\nCode chunk below adds the aesthetic element into the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=MATHS))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note appearance=\"classic\"}\n-   ggplot includes the x-axis and the axis's label\n:::\n\n1.7 Essential Grammatical Elements in ggplot2: geom\n\nGeometric objects are the actual marks we put on a plot.\n\nExamples include:\n\n-   *geom_point* for drawing individual points (e.g., a scatter plot)\n\n-   *geom_line* for drawing lines (e.g., for a line charts)\n\n-   *geom_smooth* for drawing smoothed lines (e.g., for simple trends or approximations)\n\n-   *geom_bar* for drawing bars (e.g., for bar charts)\n\n-   *geom_histogram* for drawing binned values (e.g.Â a histogram)\n\n-   *geom_polygon* for drawing arbitrary shapes\n\n-   *geom_map* for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\n-   A plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the + operator.\n\n-   For complete list, please refer to [here](https://ggplot2.tidyverse.org/reference/#section-layer-geoms).\n\n### 1.7.1 Geometric Objects: geom_bar\n\nThe code chunk below plots a bar chart by using [`geom_bar()`](https://ggplot2.tidyverse.org/reference/geom_bar.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### 1.7.2 Geometric Objects: geom_dotplot\n\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\n\nIn the code chunk below, [`geom_dotplot()`](https://ggplot2.tidyverse.org/reference/geom_dotplot.html) of ggplot2 is used to plot a dot plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(dotsize=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n::: callout-warning\nThe y scale is not very useful, in fact it is very misleading.\n:::\n\n::: callout-note\nThe code chunk below performs the following two steps:\n\n-   `scale_y_continuous()` is used to turn off the y-axis, and\n\n-   *binwidth argument* is used to change the binwidth to 2.5.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_dotplot(binwidth=2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL,\n                     breaks= NULL)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### 1.7.3 Geometric Objects: `geom_histogram()`\n\nIn the code chunk below, [*geom_histogram()*](https://ggplot2.tidyverse.org/reference/geom_histogram.html) is used to create a simple histogram by using values in *MATHS* field of *exam_data*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(binwidth=10,color='white')\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nNote that the default bin is 30.\n:::\n\n### 1.7.4 Modifying a geometric object by changing `geom()`\n\nIn the code chunk below,\n\n-   *bins* argument is used to change the number of bins to 20,\n\n-   *fill* argument is used to shade the histogram with light blue color, and\n\n-   *color* argument is used to change the outline colour of the bars in black\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### 1.7.5 Modifying a geometric object by changing *aes()*\n\n-   The code chunk below changes the interior colour of the histogram (i.e.Â *fill*) by using sub-group of *aesthetic()*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=MATHS,\n           fill = GENDER)) +\n         geom_histogram(bins =20,\n                        color='grey40')\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nThis approach can be used to colour, fill and alpha of the geometric.\n:::\n\n### 1.7.6 Geometric Objects: geom-density()\n\n[`geom-density()`](https://ggplot2.tidyverse.org/reference/geom_density.html) computes and plots [kernel density estimate](https://en.wikipedia.org/wiki/Kernel_density_estimation), which is a smoothed version of the histogram.\n\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_density(color='orange')\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nThe code chunk below plots two kernel density lines by using *colour* or *fill* arguments of *aes()*\n\nI have to first remove the 'color' within geom_density.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x=MATHS,\n           color=GENDER)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n### 1.7.7 Geometric Objects: geom_boxplot\n\n[`geom_boxplot()`](https://ggplot2.tidyverse.org/reference/geom_boxplot.html) displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all \\\"outlying\\\" points individually.\n\nThe code chunk below plots boxplots by using [`geom_boxplot()`](https://ggplot2.tidyverse.org/reference/geom_boxplot.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y=MATHS,\n           x=GENDER)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n[Notches](https://sites.google.com/site/davidsstatistics/home/notched-box-plots) are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\n\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### 1.7.8 Geometric Objects: geom_violin\n\n[`geom_violin`](https://ggplot2.tidyverse.org/reference/geom_violin.html) is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it\\'s easier to compare several distributions since they\\'re placed side by side.\n\nThe code below plot the distribution of Maths score by gender in violin plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n### 1.7.9 Geometric Objects: geom_point()\n\n[`geom_point()`](https://ggplot2.tidyverse.org/reference/geom_point.html) is especially useful for creating scatterplot.\n\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using `geom_point()`.\n\nNYX: groupby gender\n\n[Set color by group](https://statisticsglobe.com/set-color-group-ggplot2-plot-r)\n\n[Color-hex](https://www.color-hex.com/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= ENGLISH,\n           color = GENDER)) +\n  geom_point() +\n  scale_color_manual(values = c(\"#ca7dcc\",  #manually st the color\n                                \"#1b98e0\",\n                                \"#353436\",  #not applicable\n                                \"#02e302\"))  #not applicable\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### 1.7.10 *geom* objects can be combined\n\nThe code chunk below plots the data points on the boxplots by using both `geom_boxplot()` and `geom_point()`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n\n  geom_point(position = 'jitter',\n             size=0.5) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nAbove: NYX's mistake in the layer order\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +\n  geom_point(position = 'jitter',\n             size=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## 1.8 Essential Grammatical Elements in ggplot2: stat\n\nThe [Statistics functions](https://ggplot2.tidyverse.org/reference/#stats) statistically transform data, usually as some form of summary. For example:\n\n-   frequency of values of a variable (bar graph)\n\n    -   a mean\n\n    -   a confidence limit\n\n-   There are two ways to use these functions:\n\n    -   add a `stat_()` function and override the default geom, or\n\n    -   add a `geom_()` function and override the default stat.\n\n### 1.8.1 Working with `stat()`\n\nThe boxplots below are incomplete because the positions of the means were not shown.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes( y= MATHS, x = GENDER)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n### 1.8.2 Working with stat - the *stat_summary()* method\n\nThe code chunk below adds mean values by using [`stat_summary()`](https://ggplot2.tidyverse.org/reference/stat_summary.html) function and overriding the default geom.\n\nNYX: Add the mean to the boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = 'point',\n               fun.y='mean',\n               colour = 'red',\n               size=4)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\ncolour is spelled in UK ENG\n:::\n\n### 1.8.3 Working with stat - the `geom()` method\n\nThe code chunk below adding mean values by using `geom_()` function and overriding the default stat.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)          \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### 1.8.4 Adding a best fit curve on a scatterplot?\n\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\nIn the code chunk below, [`geom_smooth()`](https://ggplot2.tidyverse.org/reference/geom_smooth.html) is used to plot a best fit curve on the scatterplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nThe default method used is `loess`.\n:::\n\nThe default smoothing method can be overridden as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5, method = lm)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\nNYX: Add equation and r\\^2 to the plot. Load the library ggpmisc\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary('ggpmisc')\n```\n:::\n\n\n::: callout-note\nAbout the error: annotate is masked from ggplot2\n\nhttps://stackoverflow.com/questions/39137110/what-does-the-following-object-is-masked-from-packagexxx-mean\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# assembling a single label with equation and R2\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  stat_poly_line() +\n  stat_poly_eq(use_label(c(\"eq\", \"R2\"))) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}