{
  "hash": "99d40c8da86a7daeb3485640a4ee2502",
  "result": {
    "markdown": "---\ntitle: \"gghorizon\"\nauthor: \"NYX\"\ndate: '22 May 2023'\ndate-modified: \"2023-05-23\"\neditor: visual\nexecute: \n  freeze: auto\n  warning: false\n  #echo: false\n  #message: false\nformat:\n  html:\n    code-fold: True\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, igraph, tidygraph, ggraph,\n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts,knitr,plotly, \n               ggHoriPlot, ggthemes,patchwork)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nutils::data(climate_CPH)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(climate_CPH)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 9,132\nColumns: 9\n$ Region         <chr> \"Europe\", \"Europe\", \"Europe\", \"Europe\", \"Europe\", \"Euro…\n$ Country        <chr> \"Denmark\", \"Denmark\", \"Denmark\", \"Denmark\", \"Denmark\", …\n$ State          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ City           <chr> \"Copenhagen\", \"Copenhagen\", \"Copenhagen\", \"Copenhagen\",…\n$ Month          <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Day            <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, …\n$ Year           <dbl> 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1…\n$ AvgTemperature <dbl> 1.2222222, -0.8333333, -4.0000000, -3.0555556, -4.83333…\n$ date_mine      <date> 2021-01-01, 2021-01-02, 2021-01-03, 2021-01-04, 2021-0…\n```\n:::\n:::\n\n\n1.  The **`mutate()`** function is used to create a new column named \"outlier\" in the **`climate_CPH`** dataframe.\n\n2.  The **`between()`** function is applied to the \"AvgTemperature\" column, checking if each value falls within a certain range.\n\n3.  The range is defined using the lower and upper cutpoints. The lower cutpoint is calculated as the first quartile (25th percentile) of the \"AvgTemperature\" column minus 1.5 times the interquartile range (IQR), while the upper cutpoint is calculated as the third quartile (75th percentile) plus 1.5 times the IQR. The **`quantile()`** function is used to calculate the quartiles, and the **`IQR()`** function is used to calculate the interquartile range.\n\n4.  The resulting logical values are stored in the \"outlier\" column.\n\n5.  Finally, the **`filter()`** function is used to keep only the rows where the \"outlier\" column has a value of **`TRUE`**, effectively filtering out the rows that do not meet the outlier criteria based on the \"AvgTemperature\" values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncutpoints <- climate_CPH  %>% \n  mutate(\n    outlier = between(\n      AvgTemperature, \n      quantile(AvgTemperature, 0.25, na.rm=T)-\n        1.5*IQR(AvgTemperature, na.rm=T),\n      quantile(AvgTemperature, 0.75, na.rm=T)+\n        1.5*IQR(AvgTemperature, na.rm=T))) %>% \n  filter(outlier)\n```\n:::\n\n\n1.  The **`sum()`** function is used to calculate the sum of the minimum and maximum values of the \"AvgTemperature\" column in the **`cutpoints`** dataframe. The **`range()`** function returns a vector containing the minimum and maximum values of the specified column. The result is divided by 2 to obtain the midpoint of the range. This midpoint is stored in the variable **`ori`**.\n\n2.  The **`seq()`** function is used to generate a sequence of values. It takes three arguments: the start value, the end value, and the length of the sequence. In this case, the start value is the minimum value of the \"AvgTemperature\" column, and the end value is the maximum value of the \"AvgTemperature\" column. The length of the sequence is set to 7. The **`[-4]`** at the end of the sequence generation excludes the fourth element from the sequence. The resulting sequence of values is stored in the variable **`sca`**.\n\nOverall, the code calculates the midpoint of the range of values in the \"AvgTemperature\" column and generates a sequence of values based on the minimum and maximum values in the same column. The generated sequence is used for further analysis or plotting purposes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nori <- sum(range(cutpoints$AvgTemperature))/2\n\nsca <- seq(range(cutpoints$AvgTemperature)[1], \n           range(cutpoints$AvgTemperature)[2], \n           length.out = 7)[-4]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nround(ori, 2) # The origin\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6.58\n```\n:::\n\n```{.r .cell-code}\n#> [1] 6.58\n\nround(sca, 2) # The horizon scale cutpoints\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -12.11  -5.88   0.35  12.81  19.05  25.28\n```\n:::\n\n```{.r .cell-code}\n#> [1] -12.11  -5.88   0.35  12.81  19.05  25.28\n```\n:::\n\n\nPlotting the horizon\n\n1.  The **`ggplot()`** function initializes the plot.\n\n2.  The **`geom_horizon()`** function creates the horizon plot. It uses the **`date_mine`** column as the x-axis, the **`AvgTemperature`** column as the y-axis, and the **`..Cutpoints..`** variable for filling the horizons.\n\n3.  The **`origin`** parameter sets the origin of the horizon plot to the value stored in the variable **`ori`**.\n\n4.  The **`horizonscale`** parameter sets the scale of the horizons using the values stored in the variable **`sca`**.\n\n5.  The **`scale_fill_hcl()`** function sets the color palette for the filled horizons. It uses the 'RdBu' palette and reverses the order of the colors with **`reverse = T`**.\n\n6.  The **`facet_grid()`** function creates a grid of facets (small multiples) based on the **`Year`** column.\n\n7.  The **`theme_few()`** function applies a pre-defined minimalistic theme to the plot.\n\n8.  The **`theme()`** function is used to modify specific aspects of the plot's appearance. It removes vertical panel spacing, adjusts the size, angle, and justification of y-axis strip text, removes y-axis text, title, and ticks, and removes the panel border.\n\n9.  The **`scale_x_date()`** function is used to customize the x-axis. It sets the expand parameter to c(0,0) to remove padding, sets the date breaks to \"1 month\", and sets the date labels to \"%b\" for abbreviated month names.\n\n10. The **`xlab()`** function sets the label for the x-axis.\n\n11. The **`ggtitle()`** function sets the plot title and subtitle.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclimate_CPH %>% ggplot() +\n  geom_horizon(aes(date_mine, \n                   AvgTemperature,\n                   fill = ..Cutpoints..), \n               origin = ori, horizonscale = sca) +\n  scale_fill_hcl(palette = 'RdBu', reverse = T) +\n  facet_grid(Year~.) +\n  theme_few() +\n  theme(\n    panel.spacing.y=unit(0, \"lines\"),\n    strip.text.y = element_text(size = 7, angle = 0, hjust = 0),\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n  scale_x_date(expand=c(0,0), \n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  xlab('Date') +\n  ggtitle('Average daily temperature in Copenhagen', \n          'from 1995 to 2019')\n```\n\n::: {.cell-output-display}\n![](horizon-chart_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n# 2 Trying it on nodes_seafood_vis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_seafood_edges_agg_vis<- readRDS(\"C:/yixin-neo/ISSS608-VAA/Project/data/mc2_seafood_edges_agg_vis.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mc2_seafood_edges_agg_vis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,054\nColumns: 12\n$ from        <chr> \"Adair Salmon ОАО Family\", \"Adair Salmon ОАО Family\", \"Ada…\n$ to          <chr> \"Panope Limited Liability Company\", \"Panope Limited Liabil…\n$ arrivaldate <date> 2032-12-25, 2033-01-17, 2033-01-11, 2033-12-22, 2033-12-2…\n$ Weight      <int> 6, 8, 7, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 9, 8, 6, 7, 9, 6, 6…\n$ Totalweight <int> 143655, 180145, 125925, 155265, 155250, 155295, 216095, 18…\n$ hscode      <chr> \"160414\", \"160414\", \"160414\", \"160414\", \"160414\", \"160414\"…\n$ year        <dbl> 2032, 2033, 2033, 2033, 2033, 2034, 2033, 2033, 2033, 2033…\n$ month       <dbl> 12, 1, 1, 12, 12, 1, 3, 4, 7, 8, 9, 9, 9, 10, 10, 1, 1, 2,…\n$ day         <int> 25, 17, 11, 22, 25, 2, 18, 16, 24, 28, 10, 19, 25, 2, 6, 2…\n$ weekday     <ord> Saturday, Monday, Tuesday, Thursday, Sunday, Monday, Frida…\n$ weeknumber  <dbl> 52, 3, 2, 51, 51, 1, 11, 15, 29, 34, 36, 38, 38, 39, 40, 3…\n$ title       <chr> \"Total Weight =  143655 \\n HSCODE = 160414\", \"Total Weight…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_seafood_edges_agg_vis %>%  group_by(from) %>%  summarise(Allweight = sum(Weight)) %>%\n  arrange(desc(Allweight))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 76 × 2\n   from                                           Allweight\n   <chr>                                              <int>\n 1 \"Playa del Tesoro OJSC\"                             6139\n 2 \"Estrella de la Costa SRL\"                          2797\n 3 \"OceanicOrigin Foods Co Consulting\"                 1629\n 4 \"Náutica del Sol Brothers\"                           816\n 5 \"Beachcomber's Bounty Sea spray\"                     557\n 6 \"Mar de la Aventura Limited Liability Company\"       544\n 7 \"Shou gan  Oyj Overseas\"                             483\n 8 \"Diao er  Limited Liability Company\"                 425\n 9 \"Oceanfront Oasis Company Green \"                    390\n10 \"Gujarat   Tide NV Solutions\"                        380\n# ℹ 66 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplaya <- mc2_seafood_edges_agg_vis %>%\n  filter(from == \"Playa del Tesoro OJSC\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncutpoints_playa <- playa  %>% \n  mutate(\n    outlier = between(\n      Weight, \n      quantile(Weight, 0.25, na.rm=T)-\n        1.5*IQR(Weight, na.rm=T),\n      quantile(Weight, 0.75, na.rm=T)+\n        1.5*IQR(Weight, na.rm=T))) %>% \n  filter(outlier)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nori <- sum(range(cutpoints_playa$Weight))/2\n\nsca <- seq(range(cutpoints_playa$Weight)[1], \n           range(cutpoints_playa$Weight)[2], \n           length.out = 7)[-4]\n```\n:::\n\n\nFirst we have to fix the arrivaldate column such that all the year value are the same (for the purpose for plotting horizon chart later). All the year values will get a default '2021'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplaya$mine_date <- sprintf(\"2021-%s-%s\", substr(playa$arrivaldate, 6, 7), substr(playa$arrivaldate, 9, 10))\nplaya$mine_date <- as.Date(playa$mine_date)\n```\n:::\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\nplaya %>% ggplot() +\n  geom_horizon(aes(mine_date, \n                   Weight,\n                   fill = ..Cutpoints..), \n               origin = ori, horizonscale = sca) +\n  scale_fill_hcl(palette = 'RdBu', reverse = T) +\n  facet_grid(year~.) +\n  theme_few() +\n  theme(\n    panel.spacing.y=unit(0, \"lines\"),\n    strip.text.y = element_text(size = 7, angle = 0, hjust = 0),\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n  scale_x_date(expand=c(0,0), \n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  xlab('Date') +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  ggtitle('Weight of goods trade by Playa del Tesoro OJSC from 2028 to 2034')\n```\n\n::: {.cell-output-display}\n![](horizon-chart_files/figure-html/unnamed-chunk-15-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nasd <-playa %>% ggplot() +\n  geom_horizon(aes(arrivaldate, \n                   Weight,\n                   fill = ..Cutpoints..), \n               origin = ori, horizonscale = sca) +\n  scale_fill_hcl(palette = 'RdBu', reverse = T) +\n  #facet_grid(year~.) +\n  theme_few() +\n  theme(\n    panel.spacing.y=unit(0, \"lines\"),\n    strip.text.y = element_text(size = 7, angle = 0, hjust = 0),\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n  scale_x_date(expand=c(0,0), \n               date_breaks = \"6 month\",\n               date_labels = \"%b\") +\n  xlab('Date') +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n:::\n\n\nFOR ENTIRE except playa\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_outdeg <-subset(mc2_seafood_edges_agg_vis, from %in% c('Playa del Tesoro OJSC', 'Estrella de la Costa SRL', 'OceanicOrigin Foods Co Consulting', 'Náutica del Sol Brothers', 'Beachcomber\\'s Bounty Sea spray', 'Mar de la Aventura Limited Liability Company', 'Shou gan  Oyj Overseas', 'Diao er  Limited Liability Company', 'Oceanfront Oasis Company Green ', 'Gujarat   Tide NV Solutions'))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncutpoints_top10_outdeg <- top10_outdeg  %>% \n  mutate(\n    outlier = between(\n      Weight, \n      quantile(Weight, 0.25, na.rm=T)-\n        1.5*IQR(Weight, na.rm=T),\n      quantile(Weight, 0.75, na.rm=T)+\n        1.5*IQR(Weight, na.rm=T))) %>% \n  filter(outlier)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nori <- sum(range(top10_outdeg$Weight))/2\n\nsca <- seq(range(top10_outdeg$Weight)[1], \n           range(top10_outdeg$Weight)[2], \n           length.out = 7)[-4]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_outdeg$mine_date <- sprintf(\"2021-%s-%s\", substr(top10_outdeg$arrivaldate, 6, 7), substr(top10_outdeg$arrivaldate, 9, 10))\n\ntop10_outdeg$mine_date <- as.Date(top10_outdeg$mine_date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop10_outdeg %>% ggplot() +\n  geom_horizon(aes(arrivaldate, \n                   Weight,\n                   fill = ..Cutpoints..), \n               origin = ori, horizonscale = sca) +\n  scale_fill_hcl(palette = 'RdBu', reverse = T) +\n  facet_grid(from~.) +\n  theme_few() +\n  theme(\n    panel.spacing.y=unit(0, \"lines\"),\n    strip.text.y = element_text(size = 7, angle = 0, hjust = 0),\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n  scale_x_date(expand=c(0,0), \n               date_breaks = \"6 month\",\n               date_labels = \"%b\") +\n  xlab('Date') +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](horizon-chart_files/figure-html/unnamed-chunk-21-1.png){width=1152}\n:::\n:::\n\n\nTRYING FOR DISCONNECTED COMPONENETS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc2_seafood_edges_agg_vis_with_disconnected<- readRDS(\"C:/yixin-neo/ISSS608-VAA/Project/data/mc2_seafood_edges_agg_vis_withdisconnected.rds\")\n```\n:::\n",
    "supporting": [
      "horizon-chart_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}