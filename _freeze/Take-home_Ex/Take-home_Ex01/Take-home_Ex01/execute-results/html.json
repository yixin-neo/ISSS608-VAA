{
  "hash": "de7b7f9bb9947243f2a1a043a81cfd72",
  "result": {
    "markdown": "---\ntitle: \"Take-home_Ex01\"\nauthor: \"NeoYX\"\ndate: '7 May 2023'\n#date-modified: \"2023-05-07\"\neditor: visual\nexecute: \n  freeze: auto\n  warning: false\n  #echo: false\n  #message: false\n  html:\n    code-fold: True\n    code-overflow: scroll\n    code-summary: \"Show the code\"\n    code-line-numbers: true\n---\n\n\n# 1. Task and Dataset\n\nThis exerises aims to reveal the demographic and financial characteristics of the city of Engagement, using appropriate **static and interactive statistical graphics** methods. It also requires a user-friendly and interactive solution that helps city managers and planners to explore the complex data in an engaging way and reveal hidden patterns.\n\nThe dataset consists of a sample survey of 1000 representative residents that collects data related to their household demographic and spending patterns, among other things. There are primarily two datasets used in this exercise\n\n-    \\'FinancialJournal.csv\\\": Contains 1513635 number of daily transaction records (different categories of income and expenses) over a period of twelve months from March 2022 to February 2023.\n\n\n```{=html}\n<!-- -->\n```\n\n-    \\'Particpants.csv\\\" : Contains demographics information like household size, age, education level, interest groups, joviality index and whether each household has kids.\n\nIn this exercise, each dataset will be cleansed separately and then joined by \\'participantID\\' as primary key to form the final dataset used for further analysis.\n\n# \n\n# 2. Data Preparation\n\n## 2.1 Install and load the required libraries\n\nThe code chunk below uses `pacman::p_load()` to check if packages are installed. If they are, they will be launched into R. The packages installed are\n\n-   `plotly`: Used for creating interactive web-based graphs.\n\n-   `knitr`: Used for dynamic report generation\n\n-   `patchwork`: Used to combine plots\n\n-   `tidyverse`: A collection of core packages designed for data science, used extensively for data preparation and wrangling.\n\n-   `ggthemes`: Provide additional themes for `ggplot2`\n\n-   `ggstatsplot`: Used for creating graphics with details from statistical tests.\n\n-   `ggdist`: Used for visualising distribution and uncertainty\n\n-   \n\n-   \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(plotly, knitr, patchwork, tidyverse, ggthemes, ggstatsplot, ggdist, png, gifski, nortest)\n```\n:::\n\n\n## 2.2 Import the dataset\n\nThe data is imported using `tidyverse`'s `readr::read_csv()` function and stored as finance variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinance <- read_csv('data/FinancialJournal.csv')\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  participantId timestamp           category  amount\n          <dbl> <dttm>              <chr>      <dbl>\n1             0 2022-03-01 00:00:00 Wage      2473. \n2             0 2022-03-01 00:00:00 Shelter   -555. \n3             0 2022-03-01 00:00:00 Education  -38.0\n4             1 2022-03-01 00:00:00 Wage      2047. \n5             1 2022-03-01 00:00:00 Shelter   -555. \n6             1 2022-03-01 00:00:00 Education  -38.0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nptcp <- read_csv('data/Participants.csv')\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  participantId householdSize haveKids   age educationLevel      interestGroup\n          <dbl>         <dbl> <lgl>    <dbl> <chr>               <chr>        \n1             0             3 TRUE        36 HighSchoolOrCollege H            \n2             1             3 TRUE        25 HighSchoolOrCollege B            \n3             2             3 TRUE        35 HighSchoolOrCollege A            \n4             3             3 TRUE        21 HighSchoolOrCollege I            \n5             4             3 TRUE        43 Bachelors           H            \n6             5             3 TRUE        32 HighSchoolOrCollege D            \n# ℹ 1 more variable: joviality <dbl>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}